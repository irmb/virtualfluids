GET_FILENAME_COMPONENT( CURRENT_DIR  ${CMAKE_CURRENT_LIST_FILE} PATH)
COLLECT_PACKAGE_DATA_WITH_OPTION(${CURRENT_DIR} ALL_SOURCES outOption outSourceGroupName)

IF( ${outOption} )

   #verzeichnis als std-include adden
   INCLUDE_DIRECTORIES( ${CURRENT_DIR}/include )

   OPTION(USE_MUPARSER_AS_LIB "MuParser will be compiled as lib" ON)

   IF(USE_MUPARSER_AS_LIB)
     FILE( GLOB muparser_HEADER_FILES ${CURRENT_DIR}/include/*.h   )
     FILE( GLOB muparser_CXX_FILES    ${CURRENT_DIR}/src/*.cpp )

     SET(MUPARSER_SRC_FILES ${muparser_HEADER_FILES} ${muparser_CXX_FILES})

     ADD_LIBRARY(muParserLib ${MUPARSER_SRC_FILES})
     
     #lib projekt hinzufuegen	  
     LIST(APPEND CAB_ADDITIONAL_LINK_LIBRARIES muParserLib)
     
     ADD_TARGET_PROPERTIES(muParserLib COMPILE_FLAGS "-I${CURRENT_DIR}/include")
     
     #compilerflags aktuellem projekt hinzufuegen	  
     ADD_COMPILER_FLAGS_TO_PROJECT(${CAB_COMPILER} "muParserLib" "CXX" "STATIC")

   ELSE() #not as lib
      SET( CURRENT_DIR_TMP ${CURRENT_DIR} ) #wird im nächsten befehl geaendert
      INCLUDE( ${CURRENT_DIR_TMP}/include/CMakePackage.txt)
      INCLUDE( ${CURRENT_DIR_TMP}/src/CMakePackage.txt)
   ENDIF()

ENDIF( ${outOption} )




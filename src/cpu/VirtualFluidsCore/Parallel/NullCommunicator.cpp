#include "NullCommunicator.h"

NullCommunicator::NullCommunicator()
{
}
//////////////////////////////////////////////////////////////////////////
NullCommunicator::~NullCommunicator()
{
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getBundleID() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getNumberOfBundles() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getProcessID() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getNumberOfProcesses()
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
void* NullCommunicator::getNativeCommunicator()
{
   return NULL;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getRoot() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getBundleRoot() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
int NullCommunicator::getProcessRoot() 
{
   return 0;
}
//////////////////////////////////////////////////////////////////////////
std::vector<std::string> NullCommunicator::gather(const std::string& str)
{
   return std::vector<std::string>();
}
//////////////////////////////////////////////////////////////////////////
std::vector<double> NullCommunicator::gatherDoubles(std::vector<double>& values) 
{
   return std::vector<double>();
}
//////////////////////////////////////////////////////////////////////////
void NullCommunicator::allGatherInts(std::vector<int>& svalues, std::vector<int>& rvalues)
{

}
//////////////////////////////////////////////////////////////////////////
void NullCommunicator::sendSerializedObject(std::stringstream& ss, int target) 
{

}
//////////////////////////////////////////////////////////////////////////
void NullCommunicator::receiveSerializedObject(std::stringstream& ss, int source) 
{

}

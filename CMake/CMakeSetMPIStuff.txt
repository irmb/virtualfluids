################################################################
###               SET_MPI_STUFF                              ###
### SET_MPI_STUFF( )                                         ###
################################################################
MACRO(SET_MPI_STUFF CAB_MACHINE)
   # it will define the following values
   #  MPI_INCLUDE_PATH = where mpi.h can be found
   #  MPI_C_LIBRARY    = C library   (!!! if not set already  !!!)
   #  MPI_CXX_LIBRARY  = C++ library (!!! if not set already  !!!)
   #  MPI_CXX_COMPILER (!!! check for euqality with CMAKE_CXX_COMPILER  !!!)
   #  MPI_C_COMPILER   (!!! check for euqality with CMAKE_C_COMPILER    !!!)
   
   LIST(APPEND CAB_ADDTIONAL_COMPILER_FLAGS -DCAB_MPI)
	LIST(APPEND CAB_ADDTIONAL_COMPILER_FLAGS -DMPICH_IGNORE_CXX_SEEK)

   IF(NOT MPI_DIR)
     GET_DIRECTORY_FROM_ENV(MPI_DIR MPI_DIR CACHE "path to MPI dir")
   ELSE(NOT MPI_DIR)
     GET_DIRECTORY_FROM_VAR(MPI_DIR CACHE "path to MPI dir")
   ENDIF(NOT MPI_DIR)

   IF(NOT MPI_DIR)
      SET(MPI_DIR "MPI_DIR - not found" CACHE PATH "path to MPI which inlcudes include" FORCE) 
      MESSAGE("SET_MPI_STUFF - error - set MPI_DIR!")
   ENDIF(NOT MPI_DIR)

   IF(NOT EXISTS ${MPI_DIR} )
      MESSAGE("SET_MPI_STUFF - error - MPI_DIR=${MPI_DIR} does not exist")
   ELSE()
      FIND_PROGRAM( MPI_CXX_COMPILER
                    NAMES mpicxx mpic++ mpiCC
                    PATHS
                    ${MPI_DIR}/bin
                    NO_DEFAULT_PATH
                   )
      FIND_PROGRAM( MPI_C_COMPILER
                    NAMES mpicc
                    PATHS
                    ${MPI_DIR}/bin
                    NO_DEFAULT_PATH
                   )
                   
      # extract the parent directory path to get MPI_DIR 
      FIND_PATH( MPI_INCLUDE_PATH mpi.h 
                 "${MPI_DIR}/include"
                )
      
      IF(NOT MPI_CXX_LIBRARY)
         FIND_LIBRARY(MPI_CXX_LIBRARY 
                      NAMES mpi++ pmpich++ mpichcxx mpich++ c++ cxx
                      PATHS
                      "${MPI_DIR}/lib"
                      NO_DEFAULT_PATH
                     )
      ENDIF()
      
      IF(NOT MPI_C_LIBRARY)
         FIND_LIBRARY(MPI_C_LIBRARY 
                      NAMES mpi mpich
                      PATHS 
                   	 "${MPI_DIR}/lib"
                      NO_DEFAULT_PATH
                      )
      ENDIF()


      INCLUDE_DIRECTORIES( ${MPI_INCLUDE_PATH} )
      LIST(APPEND CAB_ADDITIONAL_LINK_LIBRARIES ${MPI_CXX_LIBRARY})
      LIST(APPEND CAB_ADDITIONAL_LINK_LIBRARIES ${MPI_C_LIBRARY})
  
      #IF(WIN32) 
        #SET(CAB_ADDITIONAL_LINK_FLAGS "${CAB_ADDITIONAL_LINK_FLAGS} /NODEFAULTLIB:\"LIBCMT\"")
      #ELSE(WIN32)
      #  STRING(REGEX REPLACE ".*/(.*)" "\\1" temp_cxx_compiler    "${CMAKE_CXX_COMPILER}" )
      #  STRING(REGEX REPLACE ".*/(.*)" "\\1" temp_mpicxx_compiler "${MPI_CXX_COMPILER}" )

      #  IF(NOT temp_cxx_compiler STREQUAL temp_mpicxx_compiler)
      #    MESSAGE(FATAL_ERROR "findMPI - CMAKE_CXX_COMPILER ${CMAKE_CXX_COMPILER} is not the right MPI_CXX_COMPILER ${MPI_CXX_COMPILER}")
      #  ENDIF()
        
      #  STRING(REGEX REPLACE ".*/(.*)" "\\1" temp_c_compiler    "${CMAKE_C_COMPILER}" )
      #  STRING(REGEX REPLACE ".*/(.*)" "\\1" temp_mpic_compiler "${MPI_C_COMPILER}" )

      #   IF(NOT temp_c_compiler STREQUAL temp_mpic_compiler)
      #    MESSAGE(FATAL_ERROR "findMPI - CMAKE_C_COMPILER ${CMAKE_C_COMPILER} is not the right MPI_C_COMPILER ${MPI_C_COMPILER}")
      #   ENDIF()
      #ENDIF() 
   ENDIF() 
ENDMACRO(SET_MPI_STUFF CAB_MACHINE)

